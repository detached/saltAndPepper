/*
 * This file is generated by jOOQ.
 */
package de.w3is.recipes.infra.persistence.generated.tables.records;


import de.w3is.recipes.infra.persistence.generated.tables.Invitations;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvitationsRecord extends UpdatableRecordImpl<InvitationsRecord> implements Record4<Integer, String, String, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invitations.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.invitations.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.invitations.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.invitations.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.invitations.invitation_code</code>.
     */
    public void setInvitationCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.invitations.invitation_code</code>.
     */
    public String getInvitationCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.invitations.created_on</code>.
     */
    public void setCreatedOn(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.invitations.created_on</code>.
     */
    public OffsetDateTime getCreatedOn() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Invitations.INVITATIONS.ID;
    }

    @Override
    public Field<String> field2() {
        return Invitations.INVITATIONS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Invitations.INVITATIONS.INVITATION_CODE;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Invitations.INVITATIONS.CREATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getInvitationCode();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getInvitationCode();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedOn();
    }

    @Override
    public InvitationsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public InvitationsRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public InvitationsRecord value3(String value) {
        setInvitationCode(value);
        return this;
    }

    @Override
    public InvitationsRecord value4(OffsetDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public InvitationsRecord values(Integer value1, String value2, String value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvitationsRecord
     */
    public InvitationsRecord() {
        super(Invitations.INVITATIONS);
    }

    /**
     * Create a detached, initialised InvitationsRecord
     */
    public InvitationsRecord(Integer id, String userId, String invitationCode, OffsetDateTime createdOn) {
        super(Invitations.INVITATIONS);

        setId(id);
        setUserId(userId);
        setInvitationCode(invitationCode);
        setCreatedOn(createdOn);
    }
}
